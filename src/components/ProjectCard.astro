---
import colors from "./Vars.mjs";
export interface Props {
    title: string,
    description: string,
    href: string,
    github: string,
    tags: string[]
}
const {href, title, description, tags, github} = Astro.props;

const { clrPrimary } = colors
// 
---
<li class="project-card">
  <div class="main-link">
    <h3>
        {title}
        <span>&rarr;</span>
    </h3>
    <ul class="project--tags" >
      {tags.map(tag => <li><span>{tag}</span></li>)}
    </ul>

    <ul class="project--links">
      <li class=""><a href={href} class="button--primary" target="_blank">Visit</a></li>
      <li class="primary-link"><a href={github} target="_blank">
        <img width="26" height="26" src="assets/Icon/github-fill.svg" alt="github icon">
        Code 
      </a></li>
    </ul>
    <p>
        {description}
    </p>
  </div>
</li>

<style define:vars={{ clrPrimary }}>
	:root {
		--link-gradient: linear-gradient(45deg, var(--gradient-l), var(--gradient-r) 30%, var(--clr-primary) 60%);
	}
  ul {
    margin: 0;
    padding: 0;
  }

  li {
    list-style: none;
  }

  a {
    text-decoration: none;
  }
  /* .project-card {
    display: flex;
    padding: 0.15rem;
    background-image: var(--link-gradient);
    background-size: 400%;
    border-radius: 0.5rem;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .project-card > div {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1em 1.3em;
    border-radius: 0.35rem;
    color: var(--text-color);
    background-color: white;
    opacity: 0.8;
  } */

  .primary-link {
    display: flex;
    padding: 3px;
    background-image: var(--link-gradient);
    background-size: 400%;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .primary-link > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.9;
    padding: .1rem .7rem;
    color: var(--text-color);
    background-color: white;
    opacity: 0.9;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .primary-link > a > img {
    display: inline-block;
    position: relative;
    top: 6px;
    margin-right: .5rem;
  }
  
  .project--tags {
    display: flex;
    gap: 0.75rem;
    row-gap: .5rem;
    margin-top: .75rem;
    margin-bottom: 1.25rem;
    flex-wrap: wrap;
  }

  .project--tags > li {
    background-color: var(--clr-primary);
    color: var(--clr-secondary);
    padding: 0.5em 1em;
    font-size: 1rem;
    display: inline-block;
  }

  .project--links {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: .5rem;
    flex-wrap: wrap;
  }

  /* .project--links a {
    font-size: 1.15rem;
    padding: .35rem 0.75rem;
  } */

	h3 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    /* font-size: 1.5rem; */
    font-weight: 700;
	}
    
  p {
    margin-top: 0.75rem;
    margin-bottom: 0;
  }

	h2 span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.primary-link:is(:hover, :focus-within) {
		background-position: 0;
	}
	.secondary-link:is(:hover, :focus-within) {
		background-position: 0;
	}

	/* .project-card:is(:hover, :focus-within) h2 {
		color: #4F39FA;
	} */

	/* .project-card:is(:hover, :focus-within) h2 span {
		transform: translateX(2px);
	} */
</style>
